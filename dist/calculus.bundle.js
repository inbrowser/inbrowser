(()=>{"use strict";var e={961:(e,n,r)=>{n.__esModule=!0,n.compute_integral=n.first_simple_derivative=n.evaluate_function=n.CalculusErrorMessages=void 0;var t,a=r(208);!function(e){e.InvalidFunction="The given parameter for the function's expression is not valid",e.NullParameterForFunction="This function does not have parameters",e.InvalidParameterFunction="The parameter %s is invalid. Expected {variable_name: value}."}(t=n.CalculusErrorMessages||(n.CalculusErrorMessages={})),n.evaluate_function=function(e,n){if(void 0===e||null==e)return{result:null,error:t.InvalidFunction};if(void 0===n||null==n)return{result:null,error:t.NullParameterForFunction};try{return{result:mathjs.evaluate(e,n)}}catch(e){return{result:null,error:e.message}}},n.first_simple_derivative=function(e,n){if(null==e)return{result:null,error:t.InvalidFunction};if(null==n)return{result:null,error:t.InvalidParameterFunction.replace("%s",'"'+n+'"')};try{return{result:mathjs.derivative(e,n)}}catch(e){return{result:null,error:e.message}}};var o=mathjs.create(mathjs.all);o.import([[a.createIntegral]]),n.compute_integral=function(e,n){if(null==e)return{result:null,error:t.InvalidFunction};if(null==n)return{result:null,error:t.InvalidParameterFunction.replace("%s",'"'+n+'"')};try{return{result:o.integrate(e,n).toString()}}catch(e){return{result:null,error:e.message}}}},208:(e,n)=>{n.__esModule=!0,n.createIntegral=void 0,n.createIntegral=mathjs.factory("integrate",["parse","simplify","typed","ConstantNode","FunctionNode","OperatorNode","SymbolNode"],(function(e){var n=e.parse,r=e.simplify,t=e.typed,a=e.ConstantNode,o=e.FunctionNode,i=e.OperatorNode,u=e.SymbolNode,s=r,l=t("integral",{"Node, SymbolNode, Object":function(e,n,t){void 0===t.simplify&&(t.simplify=!0),void 0===t.debugPrint&&(t.debugPrint=!1),void 0===t.rules&&(t.rules=l.rules);var s=new p(n,t),c=function(e,n){return function(e){return e.transform((function(e){return n.isConstant(e)||"OperatorNode"!==e.type||"/"!==e.op?e:new i("*","multiply",[e.args[0],new i("^","pow",[e.args[1],new a(-1)])])}))}(e=function(e){return function e(r){if(!n.isConstant(r)&&"FunctionNode"===r.type)switch("string"==typeof r.fn?r.fn:r.fn.name){case"add":return new i("+","add",r.args);case"subtract":return new i("-","subtract",r.args);case"multiply":return new i("*","multiply",r.args);case"divide":return new i("/","divide",r.args);case"sqrt":return new i("^","pow",[r.args[0].map(e),new i("/","divide",[new a(1),new a(2)])]);case"nthRoot":return new i("^","pow",[r.args[0].map(e),new i("/","divide",[new a(1),r.args[1].map(e)])]);case"exp":return new i("^","pow",[new u("e"),r.args[0]]);case"pow":return new i("^","pow",r.args);case"log":if(2===r.args.length)return new i("/","divide",[new o("log",[r.args[0].map(e)]),new o("log",[r.args[1].map(e)])])}return r.map(e)}(e)}(e=function e(n){return"ParenthesisNode"===n.type?e(n.content):n.map(e)}(e)))}(e,s),g=f(c,s);if(!g)throw new Error('Unable to find integral of "'+e+'" with respect to "'+n+'"');return g=g.cloneDeep(),!0===t.simplify?r(g):g},"Node, SymbolNode":function(e,n){return l(e,n,{})},"string, SymbolNode, Object":function(e,r,t){return l(n(e),r,t)},"string, SymbolNode":function(e,r){return l(n(e),r)},"Node, string, Object":function(e,r,t){return l(e,n(r),t)},"Node, string":function(e,r){return l(e,n(r))},"string, string, Object":function(e,r,t){return l(n(e),n(r),t)},"string, string":function(e,r){return l(n(e),n(r))}});function p(e,n){this.variable=e.clone(),this.options=n,this._constantExpr={},this.subIntegral={},this.rules=n.rules,this.debugIndent=0}function c(e){return function e(n){if("OperatorNode"===n.type&&"-"===n.op&&1===n.args.length){var r=e(n.args[0]);return void 0===r?void 0:-r}return"ConstantNode"!==n.type||n.valueType&&"number"!==n.valueType?void 0:+n.value}(s(e))}function f(e,n,r){var t=e.toString({parenthesis:"all",handler:function(e,n){if("ParenthesisNode"===e.type)return"("+e.content.toString(n)+")"}}),a=r?r+": ":"";if(a+="find integral of "+t+"  d"+n.variable.name,n.printDebug(a),n.debugIndent++,void 0!==n.subIntegral[t])return n.printDebug("Precomputed: "+n.subIntegral[t]),n.debugIndent--,n.subIntegral[t];n.subIntegral[t]=null;for(var o=0;o<n.rules.length;o++){var i=n.rules[o](e,n,f);if(null!=i)return n.subIntegral[t]=i,n.printDebug("Computed: "+i.toString({parenthesis:"all"})),n.debugIndent--,i}return n.printDebug("No integral found"),n.debugIndent--,null}return p.prototype.isConstant=function(e){return"boolean"==typeof this._constantExpr[e]?this._constantExpr[e]:this._constantExpr[e]=function(e,n){switch(e.type){case"ConstantNode":return!0;case"SymbolNode":return e.name!==n.variable.name;case"OperatorNode":case"FunctionNode":return e.args.every(n.isConstant.bind(n));case"ParenthesisNode":return n.isConstant(e.content);default:throw new Error("Node type '"+e.type+"' is currently unsupported in isConstant.")}}(e,this)},p.prototype.printDebug=function(e){if(this.options.debugPrint){for(var n="",r=0;r<this.debugIndent;r++)n+="  ";console.log(n+e)}},l.rules=[function(e,n,t){var a=r.simplifyCore(e,n);if(!a.equals(e))return t(a,n,"simplified expression")},function(e,n,r){if("ParenthesisNode"===e.type){var t=r(e.content,n,"parentheses removal");return t?new ParenthesisNode(t):null}},function(e,n){if(n.isConstant(e))return new i("*","multiply",[e.clone(),n.variable.clone()])},function(e,n,r){if("OperatorNode"===e.type&&("+"===e.op||"-"===e.op)){var t=e.args.map((function(e){return r(e,n,"sum rule")}));if(t.every((function(e){return e})))return new i(e.op,e.fn,t)}},function(e,n,r){if("OperatorNode"===e.type&&"*"===e.op){var t=function e(n){return"OperatorNode"===n.type&&"*"===n.op?n.args.reduce((function(n,r){return n.concat(e(r))}),[]):"ParenthesisNode"===n.type?e(n.content):[n]}(e);if(t.length>e.args.length)return r(new i("*","multiply",t),n,"product flattening")}},function(e,n){if("SymbolNode"===e.type&&e.name===n.variable.name)return new i("*","multiply",[new i("/","divide",[new a(1),new a(2)]),new i("^","pow",[e.clone(),new a(2)])])},function(e,n,r){if("OperatorNode"===e.type&&"*"===e.op){var t=[],a=[];if(e.args.forEach((function(e){n.isConstant(e)?t.push(e):a.push(e)})),0!==t.length){var o=s(t),u=r(s(a),n,"multiplication by constant");if(u)return new i("*","multiply",[o,u])}function s(e){return 1===e.length?e[0]:new i("*","multiply",e)}}},function(e,n){if("OperatorNode"===e.type&&"^"===e.op&&e.args[0].equals(n.variable)&&n.isConstant(e.args[1]))return-1===c(e.args[1])?new o("log",[new o("abs",[n.variable.clone()])]):new i("*","multiply",[new i("/","divide",[new a(1),new i("+","add",[e.args[1].clone(),new a(1)])]),new i("^","pow",[e.args[0].clone(),new i("+","add",[e.args[1].clone(),new a(1)])])])},function(e,n){if("OperatorNode"===e.type&&"^"===e.op&&n.isConstant(e.args[0])&&e.args[1].equals(n.variable))return new i("/","divide",[e,new o("log",[e.args[0]])])},function(e,n,r){if("OperatorNode"===e.type&&"*"===e.op){var t=e.args.map((function(e){return"OperatorNode"===e.type&&"^"===e.op?{base:e.args[0],power:e.args[1]}:{base:e,power:new a(1)}})).reduce((function(e,n){for(var r=0;r<e.length;r++)if(e[r].base.equals(n.base))return e[r].power=new i("+","add",[e[r].power,n.power]),e;return e.push(n),e}),[]);if(t.length<e.args.length)return r(function(e){return 1===e.length?n(e[0]):new i("*","multiply",e.map(n));function n(e){return new i("^","pow",[e.base,e.power])}}(t),n,"combining powers")}},function(e,n,r){if("OperatorNode"===e.type&&"^"===e.op){var t=e.args[0],a=e.args[1];if("OperatorNode"===t.type&&"*"===t.op)return r(new i("*","multiply",t.args.map((function(e){return new i("^","pow",[e,a])}))),n,"distributing power")}},function(e,n,r){if("OperatorNode"===e.type&&"^"===e.op&&"OperatorNode"===e.args[0].type&&"^"===e.args[0].op)return r(new i("^","pow",[e.args[0].args[0],new i("*","multiply",[e.args[0].args[1],e.args[1]])]),n,"removing double exponential")},function(e,n,r){if("OperatorNode"===e.type&&"*"===e.op){var t=!1,a=!0,o=[];if(e.args.forEach((function(e){"OperatorNode"!==e.type||1!==e.args.length||"+"!==e.op&&"-"!==e.op?o.push(e):(t=!0,a^="-"===e.op,o.push(e.args[0]))})),t){var u=r(new i("*","multiply",o),n,"removing unary +/- from factors");if(u)return a?u:new i("-","unaryMinus",[u])}}},function(e,n,r){if("OperatorNode"===e.type&&"*"===e.op){for(var t=null,a=null,o=0;o<e.args.length;o++)if("OperatorNode"===e.args[o].type&&("+"===e.args[o].op||"-"===e.args[o].op)){t=e.args[o],a=e.args.filter((function(e,n){return n!==o}));break}if(null!==t){var u=t.args.map((function(e){return new i("*","multiply",a.concat([e]))}));return r(new i(t.op,t.fn,u),n,"product distribution")}}},function(e,n,r){var t=null,o=function(e){return function e(r,t){if(n.isConstant(r))return null;if("SymbolNode"===r.type&&r.name===n.variable.name)return t;var a=[];return r.forEach((function(e){n.isConstant(e)||a.push(e)})),1===a.length?e(a[0],r):null}(e,null)}(e);if(null!==o&&"OperatorNode"===o.type&&("+"===o.op||"-"===o.op?t=1===o.args.length?function(e){return new i(o.op,o.fn,[e])}:function(e){return e}:"*"===o.op&&(t=function(e){return new i("/","divide",[e,s(o,n.variable,new a(1))])}),null!==t)){var u=r(s(e,o,n.variable.clone()),n,"linear substitution");if(u)return t(s(u,n.variable,o))}function s(e,n,r){return function e(t){return n.equals(t)?r:t.map(e)}(e)}},function(e,n,r){if("OperatorNode"===e.type&&"^"===e.op){var t=l(e);if(t&&(u=r(t,n,"reducing power")))return u}else if("OperatorNode"===e.type&&"*"===e.op)for(var o=0;o<e.args.length;o++){var u,s=l(e.args[o]);if(s&&(u=r(new i("*","multiply",s.args.concat(e.args.slice(0,o),e.args.slice(o+1))),n,"reducing power")))return u}function l(e){if("OperatorNode"===e.type&&"^"===e.op&&!n.isConstant(e.args[0])){var r=c(e.args[1]);if(Number.isInteger(r)&&r>1&&r<=10)return new i("*","multiply",[e.args[0],2===r?e.args[0]:new i("^","pow",[e.args[0],new a(r-1)])])}return null}},function(e,n,r){if("FunctionNode"===e.type&&"log"===e.name&&1===e.args.length&&1===e.args.length&&e.args[0].equals(n.variable))return new i("-","subtract",[new i("*","multiply",[n.variable,new o("log",[n.variable])]),n.variable])},function(e,n,r){if("FunctionNode"===e.type&&e.args[0].equals(n.variable))switch(e.name){case"sin":return new i("-","unaryMinus",[new o("cos",[n.variable])]);case"cos":return new o("sin",[n.variable]);case"tan":return new o("log",[new o("abs",[new o("sec",[n.variable])])]);case"sec":return new o("log",[new o("abs",[new i("+","add",[new o("sec",[n.variable]),new o("tan",[n.variable])])])]);case"csc":return new o("log",[new o("abs",[new i("-","subtract",[new o("csc",[n.variable]),new o("cot",[n.variable])])])]);case"cot":return new o("log",[new o("abs",[new o("sin",[n.variable])])]);default:return null}}],l}))}},n={},r=function r(t){var a=n[t];if(void 0!==a)return a.exports;var o=n[t]={exports:{}};return e[t](o,o.exports,r),o.exports}(961);window.inbrowser_calculus=r})();